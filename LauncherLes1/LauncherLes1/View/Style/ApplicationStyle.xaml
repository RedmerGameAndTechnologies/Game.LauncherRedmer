<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="BackgroundColor" Color="#354D73"/>

    <FontFamily x:Key="Rubik">/View/Resources/Fonts/Rubik.ttf#Rubik</FontFamily>
    <FontFamily x:Key="Rubik-Bold">/View/Resources/Fonts/RubikBold.ttf#Rubik</FontFamily>

    <Style x:Key="WindowBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource BackgroundColor}"/>
        <Setter Property="CornerRadius" Value="10" />
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ButtonSetting.MouseOver.Background" Color="#0c9643"/>
    <SolidColorBrush x:Key="ButtonSetting.Pressed.Background" Color="#18783e"/>
    <SolidColorBrush x:Key="ButtonSetting.Disabled.Background" Color="#014d1f"/>
    <Style x:Key="ButtonSettings" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#13a84e"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="{StaticResource Rubik}"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="15">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonSetting.MouseOver.Background}"/>
                            <Setter Property="TextBlock.Foreground" Value="#bababa"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonSetting.Pressed.Background}"/>
                            <Setter Property="TextBlock.Foreground" Value="#b3b3b3"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonSetting.Disabled.Background}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="Button.MouseOver.Foreground" Color="#FF5D5D5D"/>
    <SolidColorBrush x:Key="Button.Pressed.Foreground" Color="#FF424242"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="Transparent"/>
    <Style x:Key="ButtonYesNo" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FontFamily" Value="{StaticResource Rubik-Bold}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">

                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource Button.MouseOver.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="TopMenuButtons" TargetType="Button">
        <Grid Name="Btn" Height="40" Margin="20,0,0,0">
            <Border>
                <Grid>
                    <Label Content="{TemplateBinding Content}"
                               Background="Transparent" FontSize="23" 
                               VerticalAlignment="Center">
                        <Label.Style>
                            <Style TargetType="Label">
                                <Setter Property="Foreground" Value="#FF9D9999"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=Btn}" 
                                                     Value="true">
                                        <Setter Property="Foreground" Value="White"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path = IsPressed}" Value="true">
                                        <Setter Property="Foreground" Value="#FF9D9999"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path = IsFocused}" Value="true">
                                        <Setter Property="Foreground" Value="White"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                    <Label Content="{TemplateBinding Content}"
                           Background="Transparent" Margin="-3,0,0,0"
                           VerticalAlignment="Center" FontSize="23" FontWeight="Bold">
                        <Label.Style>
                            <Style TargetType="Label">
                                <Setter Property="Foreground" Value="white"/>
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path = IsFocused}" Value="true">
                                        <DataTrigger.Setters>
                                            <Setter Property="Effect">
                                                <Setter.Value>
                                                    <BlurEffect Radius="25"/>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                </Grid>
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path = IsPressed}" Value="true">
                                <Setter Property="Margin" Value="0,2,0,0"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="SlideMenuBtn" TargetType="Button">
        <Grid Name="Btn" Height="45">
            <Border>
                <StackPanel Orientation="Horizontal">
                    <Image Source="{DynamicResource ResourceKey=Img}"
                               VerticalAlignment="Center" HorizontalAlignment="Left"
                               Height="30" Width="30" Stretch="Fill" Margin="20,0,0,0"/>
                    <Label Content="{TemplateBinding Content}" Margin="10,0,0,0"
                               Background="Transparent" FontSize="14" 
                               VerticalAlignment="Center">
                        <Label.Style>
                            <Style TargetType="Label">
                                <Setter Property="Foreground" Value="#FF9D9999"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=Btn}" 
                                                     Value="true">
                                        <Setter Property="Foreground" Value="White"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path = IsFocused}" Value="true">
                                        <Setter Property="Foreground" Value="White"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                </StackPanel>
            </Border>
            <Border Name="MouseOverBorder" Background="#FF8D8D8D">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Opacity" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=Btn}" 
                                                     Value="true">
                                <Setter Property="Opacity" Value="0.1"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <Border Name="IsSelectedBorder" Background="#FF8D8D8D">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Opacity" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path = IsFocused}" Value="true">
                                <Setter Property="Opacity" Value="0.1"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <Border Name="IsSelectedBorder2" Background="Transparent">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Setter Property="BorderThickness" Value="3,0,0,0"/>
                        <Setter Property="BorderBrush" Value="#FF00AEFF"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path = IsFocused}" Value="true">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
        </Grid>
    </ControlTemplate>
    <Style x:Key="ButtonDownloadGame" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="#e66617"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="#c9c9c9"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="{StaticResource Rubik-Bold}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#e07431"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#d15a11"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="#a3460d"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#525150"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>